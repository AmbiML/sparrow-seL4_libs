(*
 * Copyright 2014, NICTA
 *
 * This software may be distributed and modified according to the terms of
 * the GNU General Public License version 2. Note that NO WARRANTY is provided.
 * See "LICENSE_GPLv2.txt" for details.
 *
 * @TAG(NICTA_GPL)
 *)

VMM creates the skeleton for running a virtual machine. 
        -allocate memory and mapping into the address space of guest OS
        -create virtual CPU object 
        -create extended page table object 
        
        For VM configurations:
        -define vm exit reasons
        -define vm I/O bitmaps 
        -config vmcs region 
        
        -making guest OS ready to run 
        -waiting for the guest OS to exit, distributing them according to the exit information
        -inject interrupts 
        -deliver the request to device drivers 

Platform discovers the configuration of the hardware platform. 
        -scan the buses 
        -read the bootinfo
        -seperate the memory region into blocks
        -allocate memory for VMM. These areas are mapped into VMM thread, and passes the info to VMM. 
        -start VMM, passes the info of memory areas to VMM.
        -allocate the IRQs to device drivers 
        -allocate memory regions to device drivers
        -mint I/O port to device drivers 
        -allocate memory to modules 
        -create I/O space for devices 
        -start device driver and manager 

        List of caps:
        0 endpoint
        1 irq_endpoint

        Priorities:
        200 Guest OS

        210 VMM

        create process sequence:
        VMM --> GuestOS, bind VMM's endpoint to guest OS's fault endpoint

        machine related configurations: io ports, exception source, timer source, interrupt source, and other machine related configurations 

Processor emulates the CPU moudle for the guest OS. 
        -uses a exit table to provide function pointers for handling VM exit

Manager manages requests to devices and responses from devices. 
        -virtio configuration, bind virtio queues with VMM 
        -accumulate requests to device drivers 

Driver contian device drivers where actual hardwares are manipulated. 


General configuration for VMM system structure is defined in config.h

